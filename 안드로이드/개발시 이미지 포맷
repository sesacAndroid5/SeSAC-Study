📁 디지털 환경에서 널리 사용되는 이미지 파일 형식 정리
1. JPG (JPEG)
Joint Photographic Experts Group

손실 압축(Lossy Compression)을 사용하는 대표적인 이미지 포맷으로, 풍부한 색상 표현이 가능합니다.
투명도와 애니메이션은 지원하지 않습니다.

🔧 특징
손실 압축: 일부 이미지 정보를 제거해 파일 크기를 줄임

풍부한 색상: 최대 1,680만 가지 색상 표현

✅ 장점
매우 작은 파일 크기

넓은 호환성 (모든 웹, 이미지 뷰어, 편집 툴에서 지원)

사진에 최적화된 색상 표현력

❌ 단점
품질 손실 (수정/저장 반복 시 품질 저하)

투명 배경 미지원

주요 사용처: 실제 사진, 배경 이미지, 제품 이미지 등

2. PNG
Portable Network Graphics

무손실 압축(Lossless Compression)을 사용하며, 투명도 지원이 가능한 이미지 포맷입니다.
애니메이션은 지원하지 않습니다.

🔧 특징
무손실 압축: 품질 손상 없이 압축

투명도 지원: 알파 채널(Alpha Channel) 사용

선명한 표현: 경계가 뚜렷한 이미지에 적합

✅ 장점
원본 품질 유지

픽셀 단위 투명도 조절 가능

❌ 단점
파일 크기가 큼 (고해상도 이미지에 부적합)

주요 사용처: 로고, 아이콘, UI 요소, 텍스트 포함 이미지

3. WebP
Google에서 개발한 차세대 이미지 포맷

JPG, PNG, GIF의 장점을 모두 갖춘 현대적인 이미지 포맷입니다.

🔧 특징
손실/무손실 압축 모두 지원

투명도 지원 (알파 채널)

애니메이션 지원

높은 압축 효율 (JPG/PNG 대비 20~30% 더 작은 용량)

✅ 장점
최고의 압축 효율

JPG + PNG + GIF의 장점 통합

웹, 모바일 앱 이미지 리소스에 최적

❌ 단점
구형 브라우저/툴에서 일부 지원 안됨

인코딩/디코딩에 더 많은 리소스 필요

주요 사용처: 모든 웹 이미지, 모바일 앱 리소스, 애니메이션 등
권장 전략: 기본 WebP 사용 + PNG/JPG 폴백(fallback) 제공

4. 9-Patch (나인 패치)
안드로이드 개발 전용 PNG 확장 포맷

이미지의 특정 영역만 늘어나도록 정의할 수 있어, UI 요소의 크기 변화에 유연하게 대응할 수 있습니다.

🔧 특징
테두리는 유지하고 내부는 유연하게 늘어남

.9.png 형식의 파일 사용

✅ 언제 사용하나?
버튼, 말풍선, 대화 상자 등
→ 콘텐츠의 크기에 따라 이미지 크기가 변해야 할 때

❌ 일반 이미지의 단순 확대/축소 문제
테두리 깨짐

왜곡

곡선 깨짐 등

주요 사용처: 안드로이드 앱의 UI 배경 이미지, 버튼, 말풍선 등

✅ 최종 정리
포맷	압축 방식	투명도	애니메이션	주요 장점	주요 단점	추천 사용처
JPG	손실	❌	❌	작은 파일 크기, 사진에 적합	품질 손실, 투명 배경 미지원	사진, 배경 이미지
PNG	무손실	✅	❌	품질 유지, 투명도 지원	파일 크기 큼	로고, 아이콘, UI 그래픽
WebP	손실/무손실	✅	✅	높은 압축 효율, 기능 통합	구형 지원 문제	웹/앱 리소스 전반
9-Patch	무손실 (PNG)	✅	❌	UI 요소에 유연한 크기 지원	안드로이드 개발 전용	버튼, 말풍선, 대화 상자 등

